name: Analyse de Sécurité (DAST) avec OWASP ZAP

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    env:
      # L'URL cible de l'application Flask, accessible localement sur le runner
      TARGET_URL: http://127.0.0.1:5000

    steps:
      # 1. Checkout du code
      - name: ⬇️ Vérification du dépôt
        uses: actions/checkout@v4

      # 2. Installation de Python et Démarrage du Serveur Flask
      - name: ⚙️ Configuration de l'environnement Python et Démarrage du Serveur
        run: |
          # Installation des outils de base et de Python
          sudo apt update -y
          sudo apt install -y python3 python3-pip curl
          
          # Installation des dépendances Python
          pip install -r requirements.txt --break-system-packages
          
          # Lancement du serveur Flask en arrière-plan
          FLASK_APP=app.py nohup python3 -m flask run --host=0.0.0.0 --port=5000 > server.log 2>&1 &

          echo "⏳ Démarrage du serveur Flask et vérification de la disponibilité..."

          # Boucle d'attente (10 tentatives toutes les 5 secondes)
          for i in {1..10}; do
            curl -s ${{ env.TARGET_URL }} && echo "✅ Serveur démarré !" && break
            echo "🔄 Tentative $i/10..."
            sleep 5
            if [ $i -eq 10 ]; then
              echo "❌ Le serveur Flask n'a pas démarré après 50 secondes."
              cat server.log
              exit 1
            fi
          done

      # 3. Lancement du scan OWASP ZAP
      - name: 🛡️ Lancement du ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: ${{ env.TARGET_URL }}
          html_report: zap_report.html
          fail_action: false  # ne fait pas échouer le pipeline même si vulnérabilités

      # 4. Sauvegarde du rapport
      - name: 📦 Sauvegarde du Rapport et du Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rapport-zap
          path: |
            zap_report.html
            server.log
