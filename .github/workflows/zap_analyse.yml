name: Analyse automatique OWASP ZAP

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Exécution automatique d’OWASP ZAP

    steps:
      - name: 🔹 Récupération du code source
        uses: actions/checkout@v4

      - name: 🔹 Installation de Python et dépendances
        run: |
          sudo apt update -y
          sudo apt install -y python3 python3-pip
          pip install -r requirements.txt || true

      - name: 🔹 Lancement du serveur Flask
        run: |
          nohup python3 app.py > server.log 2>&1 &
          echo "⏳ Attente du démarrage du serveur Flask..."
          sleep 25
          echo "✅ Vérification du serveur Flask..."
          curl -I http://127.0.0.1:5000 || (echo "❌ Erreur : le serveur Flask ne répond pas !" && cat server.log && exit 1)

      - name: 🔹 Installation d’OWASP ZAP
        run: |
          sudo apt install -y snap
          sudo snap install zaproxy --classic

      - name: ⚡ Exécution de l’analyse OWASP ZAP
        run: |
          echo "🚀 Lancement du scan de sécurité OWASP ZAP..."
          zaproxy -cmd -quickurl http://127.0.0.1:5000 \
            -quickout rapport_zap.html -quickprogress || echo "⚠️ ZAP terminé avec avertissements."
          zaproxy -cmd -quickurl http://127.0.0.1:5000 \
            -quickout rapport_zap.json -quickprogress || echo "⚠️ ZAP JSON terminé avec avertissements."

      - name: 📦 Sauvegarde des rapports comme artefacts
        uses: actions/upload-artifact@v4
        with:
          name: rapport-zap
          path: |
            rapport_zap.html
            rapport_zap.json
            server.log
