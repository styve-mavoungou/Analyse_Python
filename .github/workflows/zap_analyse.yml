name: Analyse de Sécurité (DAST) avec OWASP ZAP

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    env:
      TARGET_URL: http://127.0.0.1:5000

    steps:
      # 1️⃣ Récupération du dépôt
      - name: ⬇️ Vérification du dépôt
        uses: actions/checkout@v4

      # 2️⃣ Installation et démarrage du serveur Flask
      - name: ⚙️ Configuration de l'environnement Python et lancement du serveur Flask
        run: |
          echo "🚀 Installation de Python et des dépendances..."
          sudo apt update -y
          sudo apt install -y python3 python3-pip curl

          echo "📦 Installation des dépendances du projet..."
          pip install -r requirements.txt --break-system-packages

          echo "🧠 Lancement du serveur Flask en arrière-plan..."
          nohup python3 app.py > server.log 2>&1 &

          echo "⏳ Vérification du démarrage du serveur Flask..."
          # Attente de 10 tentatives (5 secondes chacune)
          for i in {1..10}; do
            if curl -s ${{ env.TARGET_URL }} > /dev/null; then
              echo "✅ Serveur Flask est prêt !"
              break
            else
              echo "🔄 Tentative $i/10 : le serveur n'est pas encore prêt..."
              sleep 5
            fi
            if [ $i -eq 10 ]; then
              echo "❌ Le serveur Flask n'a pas démarré après 50 secondes."
              cat server.log
              exit 1
            fi
          done

      # 3️⃣ Lancement du scan OWASP ZAP (Baseline)
      - name: 🛡️ Lancement du ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: ${{ env.TARGET_URL }}
          html_report: zap_report.html
          fail_action: false  # ne fait pas échouer le pipeline même si vulnérabilités
        continue-on-error: true

      # 4️⃣ Affichage du rapport dans les logs
      - name: 📜 Afficher le résumé du rapport ZAP
        if: always()
        run: |
          echo "=== RAPPORT OWASP ZAP ==="
          if [ -f zap_report.html ]; then
            grep -E "<title>|<h1>|<h2>" zap_report.html || echo "Le rapport HTML a été généré avec succès."
          else
            echo "⚠️ Aucun rapport ZAP trouvé."
          fi

      # 5️⃣ Sauvegarde du rapport et des logs
      - name: 📦 Sauvegarde du Rapport et du Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rapport-zap
          path: |
            zap_report.html
            server.log
