name: Analyse OWASP ZAP simple

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Vérification du dépôt
        uses: actions/checkout@v4

      - name: ⚙️ Installation Python et dépendances
        run: |
          sudo apt update -y
          sudo apt install -y python3 python3-pip wget unzip
          pip install -r requirements.txt

      - name: 🚀 Lancement du serveur Flask
        run: |
          nohup python3 app.py > server.log 2>&1 &
          echo "⏳ Démarrage du serveur Flask..."
          for i in {1..10}; do
            curl -s http://127.0.0.1:5000 && break
            echo "🔄 Attente du serveur Flask..."
            sleep 5
          done

      - name: 📥 Téléchargement de OWASP ZAP
        run: |
          wget https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2_14_0_unix.zip
          unzip ZAP_2_14_0_unix.zip -d zap
          chmod +x zap/ZAP_2.14.0/zap.sh

      - name: 🕷️ Scan OWASP ZAP en ligne de commande
        run: |
          zap/ZAP_2.14.0/zap.sh -cmd -quickurl http://127.0.0.1:5000 -quickout rapport_zap.html || echo "⚠️ ZAP a retourné une erreur mais le pipeline continue."
        continue-on-error: true

      - name: 📦 Sauvegarde du rapport
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rapport-zap
          path: rapport_zap.html
            
